---
tls:
  stores:
    default:
      defaultCertificate:
        certFile: /root/tbrouwer-cloudflare-origin.cert
        keyFile: /root/tbrouwer-cloudflare-origin.key

http:
  serversTransports:
    pve:
      rootCAs:
        - /root/cert-proxmox.crt

    pve-backup:
      insecureSkipVerify: true

  routers:
    pve:
      entryPoints:
        - web-secure
      rule: "Host (`pve.{{ portainer_root_domain }}`)"
      middlewares:
        - authelia
      service: pve
      tls: {}

    pihole:
      entryPoints:
        - web-secure
      rule: "PathPrefix(`/admin`) && Host (`pihole.{{ portainer_root_domain }}`)"
      middlewares:
        - authelia
      service: pihole
      tls: {}

    pihole_path:
      entryPoints:
        - web-secure
      rule: "Host (`pihole.{{ portainer_root_domain }}`)"
      middlewares:
        - authelia
        - addprefix-pihole
      service: pihole
      tls: {}

    pihole_2:
      entryPoints:
        - web-secure
      rule: "PathPrefix(`/admin`) && Host (`pihole-2.{{ portainer_root_domain }}`)"
      middlewares:
        - authelia
      service: pihole_2
      tls: {}

    pihole_2_path:
      entryPoints:
        - web-secure
      rule: "Host (`pihole-2.{{ portainer_root_domain }}`)"
      middlewares:
        - authelia
        - addprefix-pihole
      service: pihole_2
      tls: {}

    wireguard:
      entryPoints:
        - web-secure
      rule: "Host (`wireguard.{{ portainer_root_domain }}`)"
      middlewares:
        - authelia
      service: wireguard
      tls: {}

    torrent:
      entryPoints:
        - web-secure
      rule: "Host(`torrent.{{ portainer_root_domain }}`)"
      middlewares:
        - authelia
      service: torrent
      tls: {}

    www-website:
      entryPoints:
        - web-secure
      rule: "Host(`www.{{ portainer_root_domain }}`)"
      service: website
      tls: {}

    website:
      entryPoints:
        - web-secure
      rule: "Host(`{{ portainer_root_domain }}`)"
      middlewares:
        - "www-redirect"
      service: website
      tls: {}

    prowlarr:
      entryPoints:
        - web-secure
      rule: "Host(`prowlarr.{{ portainer_root_domain }}`)"
      middlewares:
        - authelia
      service: prowlarr
      tls: {}

    radarr:
      entryPoints:
        - web-secure
      rule: "Host(`radarr.{{ portainer_root_domain }}`)"
      middlewares:
        - authelia
      service: radarr
      tls: {}

    sonarr:
      entryPoints:
        - web-secure
      rule: "Host(`sonarr.{{ portainer_root_domain }}`)"
      middlewares:
        - authelia
      service: sonarr
      tls: {}

    bazarr:
      entryPoints:
        - web-secure
      rule: "Host(`bazarr.{{ portainer_root_domain }}`)"
      middlewares:
        - authelia
      service: bazarr
      tls: {}

    readarr:
      entryPoints:
        - web-secure
      rule: "Host(`readarr.{{ portainer_root_domain }}`)"
      middlewares:
        - authelia
      service: readarr
      tls: {}

    pve-backup:
      entryPoints:
        - web-secure
      rule: "Host (`pve-backup.{{ portainer_root_domain }}`)"
      middlewares:
        - authelia
      service: pve-backup
      tls: {}

    jellyfin:
      entryPoints:
        - web-secure
      rule: "Host(`jellyfin.{{ portainer_root_domain }}`)"
      middlewares:
        - authelia
      service: jellyfin
      tls: {}

    gitea:
      entryPoints:
        - web-secure
      rule: "Host(`gitea.{{ portainer_root_domain }}`)"
      middlewares:
        - authelia
      service: gitea
      tls: {}

    wiki:
      entryPoints:
        - web-secure
      rule: "Host(`wiki.{{ portainer_root_domain }}`)"
      middlewares:
        - authelia
      service: wiki
      tls: {}

  services:
    pve:
      loadBalancer:
        serversTransport: "pve"
        servers:
          - url: "https://192.168.1.100:8006/"

    pihole:
      loadBalancer:
        servers:
          - url: "http://192.168.1.101:80/"

    pihole_2:
      loadBalancer:
        servers:
          - url: "http://192.168.1.112:80/"

    wireguard:
      loadBalancer:
        servers:
          - url: "http://192.168.1.102:10086/"

    torrent:
      loadBalancer:
        servers:
          - url: "http://192.168.1.104:8080/"

    website:
      loadBalancer:
        servers:
          - url: "http://192.168.1.105:80/"

    prowlarr:
      loadBalancer:
        servers:
          - url: "http://192.168.1.106:9696/"

    radarr:
      loadBalancer:
        servers:
          - url: "http://192.168.1.106:7878/"

    readarr:
      loadBalancer:
        servers:
          - url: "http://192.168.1.106:8787/"

    sonarr:
      loadBalancer:
        servers:
          - url: "http://192.168.1.106:8989/"

    bazarr:
      loadBalancer:
        servers:
          - url: "http://192.168.1.106:6767/"

    pve-backup:
      loadBalancer:
        serversTransport: "pve-backup"
        servers:
          - url: "https://192.168.1.107:8007/"

    jellyfin:
      loadBalancer:
        servers:
          - url: "http://192.168.1.108:8096/"

    gitea:
      loadBalancer:
        servers:
          - url: "http://192.168.1.109:3000/"

    wiki:
      loadBalancer:
        servers:
          - url: "http://192.168.1.110:3000/"

  middlewares:
    addprefix-pihole:
      addPrefix:
        prefix: "/admin"

    www-redirect:
      redirectRegex:
        regex: "https://{{ portainer_root_domain }}/(.*)"
        replacement: "https://www.{{ portainer_root_domain }}/${1}"

    authelia:
      forwardAuth:
        address: http://authelia:9091/api/verify?rd=https%3A%2F%2Fauthelia.{{ portainer_root_domain }}%2F
        trustForwardHeader: true
        authResponseHeaders: Remote-User,Remote-Groups,Remote-Name,Remote-Email
